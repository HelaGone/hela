!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t);n(1);document.addEventListener("DOMContentLoaded",e=>{let t,n="browser tab",o=document.getElementById("btn_download");o.style.display="none","serviceWorker"in navigator&&navigator.serviceWorker.register("./sw.js").then(e=>{},e=>{console.error(e)});const r=e=>{navigator.onLine};window.addEventListener("online",r),window.addEventListener("offline",r),window.addEventListener("beforeinstallprompt",e=>{e.preventDefault(),t=e,o.style.display="inline-block",o.addEventListener("click",e=>{o.style.display="none",t.prompt(),t.userChoice.then(e=>{"accepted"===e.outcome?gtag("event","accepted",{event_category:"pwa",event_label:"accept",value:"true"}):gtag("event","dismissed",{event_category:"pwa",event_label:"dismiss",value:"true"}),t=null})})}),window.addEventListener("appinstalled",e=>{gtag("event","app_install",{event_category:"pwa",event_label:"install",value:"true"})}),navigator.standalone&&(n="standalone-ios"),window.matchMedia("(display-mode: standalone)").matches&&(n="standalone"),window.matchMedia("(display-mode: standalone)").addListener(e=>{e.matches&&(n="standalone")}),gtag("event","display_mode",{event_category:"pwa",event_label:"display",value:n});const a=document.getElementById("main_header"),i=document.getElementById("_main_menu"),l=document.getElementById("menu_btn");let s=0;new IntersectionObserver((e,t)=>{e.forEach(e=>{e.intersectionRatio>s?(console.log("First",e),i.style.position="absolute",i.style.top="62px",l.classList.remove("switch_color")):(console.log("Second",e),i.style.position="fixed",i.style.top="0",l.classList.add("switch_color")),s=e.intersectionRatio})},{root:null,rootMargin:"0px",threshold:[0]}).observe(a)})},function(e,t,n){}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,